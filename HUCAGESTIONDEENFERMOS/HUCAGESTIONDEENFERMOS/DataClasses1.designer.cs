#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HUCAGESTIONDEENFERMOS
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HUCANET2")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertEnfermo(Enfermo instance);
    partial void UpdateEnfermo(Enfermo instance);
    partial void DeleteEnfermo(Enfermo instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::HUCAGESTIONDEENFERMOS.Properties.Settings.Default.HUCANET2ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Enfermo> Enfermo
		{
			get
			{
				return this.GetTable<Enfermo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Enfermo")]
	public partial class Enfermo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Inscripcion;
		
		private string _NombreApellido;
		
		private string _Sexo;
		
		private System.Nullable<System.DateTime> _Fecha;
		
		private string _Direccion;
		
		private System.Nullable<int> _Numero_de_la_SS;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInscripcionChanging(int value);
    partial void OnInscripcionChanged();
    partial void OnNombreApellidoChanging(string value);
    partial void OnNombreApellidoChanged();
    partial void OnSexoChanging(string value);
    partial void OnSexoChanged();
    partial void OnFechaChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnNumero_de_la_SSChanging(System.Nullable<int> value);
    partial void OnNumero_de_la_SSChanged();
    #endregion
		
		public Enfermo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inscripcion", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Inscripcion
		{
			get
			{
				return this._Inscripcion;
			}
			set
			{
				if ((this._Inscripcion != value))
				{
					this.OnInscripcionChanging(value);
					this.SendPropertyChanging();
					this._Inscripcion = value;
					this.SendPropertyChanged("Inscripcion");
					this.OnInscripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreApellido", DbType="VarChar(50)")]
		public string NombreApellido
		{
			get
			{
				return this._NombreApellido;
			}
			set
			{
				if ((this._NombreApellido != value))
				{
					this.OnNombreApellidoChanging(value);
					this.SendPropertyChanging();
					this._NombreApellido = value;
					this.SendPropertyChanged("NombreApellido");
					this.OnNombreApellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sexo", DbType="VarChar(6)")]
		public string Sexo
		{
			get
			{
				return this._Sexo;
			}
			set
			{
				if ((this._Sexo != value))
				{
					this.OnSexoChanging(value);
					this.SendPropertyChanging();
					this._Sexo = value;
					this.SendPropertyChanged("Sexo");
					this.OnSexoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime")]
		public System.Nullable<System.DateTime> Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="VarChar(50)")]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Numero de la SS]", Storage="_Numero_de_la_SS", DbType="Int")]
		public System.Nullable<int> Numero_de_la_SS
		{
			get
			{
				return this._Numero_de_la_SS;
			}
			set
			{
				if ((this._Numero_de_la_SS != value))
				{
					this.OnNumero_de_la_SSChanging(value);
					this.SendPropertyChanging();
					this._Numero_de_la_SS = value;
					this.SendPropertyChanged("Numero_de_la_SS");
					this.OnNumero_de_la_SSChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
